{"version":3,"file":"static/js/459.0614337d.chunk.js","mappings":"oOACA,EAAuB,mBAAvB,EAAqD,uB,SCKtC,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAWC,EAAAA,EAAAA,MAAXD,OAMR,IAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAUH,GAAQI,KAAKL,GAASM,MAAMC,QAAQC,IAC/C,GAAE,CAACP,IAECF,EAIL,OACE,8BACGA,EAAKU,OAAS,GACb,eAAIC,UAAWC,EAAf,SACGZ,EAAKa,KAAI,WAAoCC,GAApC,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,aAAcC,EAAvB,EAAuBA,UAAvB,OACR,gBAAYN,UAAWC,EAAvB,WACE,gBACEM,MAAM,MACNC,IACEH,EAAY,UAAMI,EAAAA,GAAN,OAAqBJ,GAAiBK,EAAAA,EAEpDC,IAAKP,KAEP,4BACE,0BACE,wCADF,IACuBA,MAEvB,0BACE,uCADF,IACsBE,UAbjBH,EADD,OAqBZ,wDAIP,C,+LC3CDS,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJU,oCAOL,IAAMC,EAAgB,mCAAG,sGACPF,EAAAA,EAAAA,IAAU,uBAAwB,CACvDG,OAAQ,CACNC,KAAM,KAHoB,uBACtBC,EADsB,EACtBA,KADsB,kBAOvBA,GAPuB,2CAAH,qDAUhBC,EAAe,mCAAG,WAAMC,GAAN,yFACNP,EAAAA,EAAAA,IAAU,gBAAiB,CAChDG,OAAQ,CACNI,MAAAA,KAHyB,uBACrBF,EADqB,EACrBA,KADqB,kBAMtBA,EAAKG,SANiB,2CAAH,sDASfC,EAAe,mCAAG,WAAMC,GAAN,yFACNV,EAAAA,EAAAA,IAAA,iBAAoBU,IADd,uBACrBL,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfM,EAAY,mCAAG,WAAMD,GAAN,yFACHV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,aADG,uBAClBL,EADkB,EAClBA,KADkB,kBAEnBA,EAAKG,SAFc,2CAAH,sDAIZ1B,EAAS,mCAAG,WAAM4B,GAAN,yFACAV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,aADA,uBACfL,EADe,EACfA,KADe,kBAEhBA,EAAK5B,MAFW,2CAAH,qD,6ECrCf,IAAMoB,EAAe,kCACfC,EACX,wH","sources":["webpack://goit-react-hw-05-movies/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx","services/api.js","utils/hrefImg.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__oOD41\",\"listItem\":\"Cast_listItem__2rNHA\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastId } from '../../services/api';\nimport { BASE_URL_IMG, placeholder } from '../../utils/hrefImg';\nimport css from './Cast.module.css';\n\nexport default function Cast() {\n  const [cast, setCast] = useState(null);\n  const { filmId } = useParams();\n\n  useEffect(() => {\n    getCastId(filmId).then(setCast).catch(console.log);\n  }, [filmId]);\n\n  if (!cast) {\n    return;\n  }\n\n  return (\n    <>\n      {cast.length > 0 ? (\n        <ul className={css.list}>\n          {cast.map(({ name, profile_path, character }, i) => (\n            <li key={i} className={css.listItem}>\n              <img\n                width=\"100\"\n                src={\n                  profile_path ? `${BASE_URL_IMG}${profile_path}` : placeholder\n                }\n                alt={name}\n              />\n              <div>\n                <p>\n                  <b>Actor name :</b> {name}\n                </p>\n                <p>\n                  <b>Character :</b> {character}\n                </p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No cast info for this movie</p>\n      )}\n    </>\n  );\n}\n\n","import axios from 'axios';\n\nconst KEY = '264653736f70104ec02ac08f6fa6f8de';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: KEY,\n};\n\nexport const getMovieTranding = async () => {\n  const { data } = await axios.get('/trending/movie/week', {\n    params: {\n      page: 1,\n    },\n  });\n\n  return data;\n};\n\nexport const getQueryByMovie = async query => {\n  const { data } = await axios.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}`);\n  return data;\n};\n\nexport const getReviewsId = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/reviews`);\n  return data.results;\n};\nexport const getCastId = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/credits`);\n  return data.cast;\n};\n","export const BASE_URL_IMG = 'https://image.tmdb.org/t/p/w300';\nexport const placeholder =\n  'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png';\n"],"names":["Cast","useState","cast","setCast","filmId","useParams","useEffect","getCastId","then","catch","console","log","length","className","css","map","i","name","profile_path","character","width","src","BASE_URL_IMG","placeholder","alt","axios","api_key","getMovieTranding","params","page","data","getQueryByMovie","query","results","getMovieDetails","movie_id","getReviewsId"],"sourceRoot":""}