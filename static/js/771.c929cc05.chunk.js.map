{"version":3,"file":"static/js/771.c929cc05.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/FilmItem/FilmItem.module.css?43a2","components/FilmItem/FilmItem.jsx","webpack://goit-react-hw-05-movies/./src/pages/FilmSearch/FilmSearch.module.css?f0e4","pages/FilmSearch/FilmSearch.jsx","services/api.js","utils/hrefImg.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"filmItem\":\"FilmItem_filmItem__3zt-o\",\"title\":\"FilmItem_title__Zx1jS\",\"itemList\":\"FilmItem_itemList__4M0VQ\"};","import { useLocation, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './FilmItem.module.css';\n\nexport const FilmItem = ({ title, href, children }) => {\n  const location = useLocation();\n  return (\n    <li className={css.itemList}>\n      <Link to={href} state={{ from: location }} className={css.filmItem}>\n        {children}\n        <p className={css.title}>{title}</p>\n      </Link>\n    </li>\n  );\n};\n\nFilmItem.propTypes = {\n  href: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FilmSearch_form__FXSvW\",\"input\":\"FilmSearch_input__kvgjR\",\"btn\":\"FilmSearch_btn__LpcFl\",\"searchList\":\"FilmSearch_searchList__od4Nd\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { CiSearch } from 'react-icons/ci';\nimport { getQueryByMovie } from '../../services/api';\nimport { FilmItem } from './../../components/FilmItem/FilmItem';\nimport css from './FilmSearch.module.css';\nimport { placeholder } from 'utils/hrefImg';\nimport { BASE_URL_IMG } from './../../utils/hrefImg';\n\nexport default function FilmSearch() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [film, setFilm] = useState([]);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    getQueryByMovie(query).then(setFilm).catch(console.log);\n  }, [query]);\n\n  const onChangeHandler = e => {\n    const { value } = e.target;\n    setSearchParams(value ? { query: value } : {});\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    if (!query) {\n      Notify.info('Please, enter movie name');\n      return;\n    }\n    getQueryByMovie(query).then(setFilm).catch(console.log);\n  };\n\n  console.log(film);\n\n  return (\n    <>\n      <div className=\"wrapper\">\n        <form onSubmit={onSubmitHandler} className={css.form}>\n          <input\n            type=\"text\"\n            value={query}\n            onChange={onChangeHandler}\n            className={css.input}\n          />\n          <button type=\"submit\" className={css.btn}>\n            <CiSearch size={30} />\n          </button>\n        </form>\n        {film.length > 0 && (\n          <ul className={css.searchList}>\n            {film.map(({ id, original_title, poster_path }) => (\n              <FilmItem\n                key={id}\n                title={original_title}\n                href={`${id}`}\n                className={css.searchItem}\n              >\n                <img\n                  src={\n                    poster_path ? `${BASE_URL_IMG}${poster_path}` : placeholder\n                  }\n                  alt={original_title}\n                />\n              </FilmItem>\n            ))}\n          </ul>\n        )}\n      </div>\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = '264653736f70104ec02ac08f6fa6f8de';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: KEY,\n};\n\nexport const getMovieTranding = async () => {\n  const { data } = await axios.get('/trending/movie/week', {\n    params: {\n      page: 1,\n    },\n  });\n\n  return data;\n};\n\nexport const getQueryByMovie = async query => {\n  const { data } = await axios.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}`);\n  return data;\n};\n\nexport const getReviewsId = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/reviews`);\n  return data.results;\n};\nexport const getCastId = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/credits`);\n  return data.cast;\n};\n","export const BASE_URL_IMG = 'https://image.tmdb.org/t/p/w300';\nexport const placeholder =\n  'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png';\n"],"names":["FilmItem","title","href","children","location","useLocation","className","css","to","state","from","FilmSearch","useSearchParams","searchParams","setSearchParams","query","get","useState","film","setFilm","useEffect","getQueryByMovie","then","catch","console","log","onSubmit","e","preventDefault","Notify","type","value","onChange","target","size","length","map","id","original_title","poster_path","src","BASE_URL_IMG","placeholder","alt","axios","api_key","getMovieTranding","params","page","data","results","getMovieDetails","movie_id","getReviewsId","getCastId","cast"],"sourceRoot":""}